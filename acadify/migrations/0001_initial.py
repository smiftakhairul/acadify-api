# Generated by Django 5.0.4 on 2024-04-10 11:25

import acadify.api.utils
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('faculty', 'Faculty'), ('student', 'Student')], default='student', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar', models.ImageField(blank=True, max_length=255, null=True, upload_to=acadify.api.utils.UploadUtils.avatar)),
                ('about', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('github', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('vk', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, max_length=255, null=True, upload_to=acadify.api.utils.UploadUtils.course)),
                ('description', models.TextField()),
                ('capacity', models.PositiveIntegerField(default=1)),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
                ('gc_attendance', models.FloatField(default=5)),
                ('gc_assignment', models.FloatField(default=10)),
                ('gc_quiz', models.FloatField(default=20)),
                ('gc_midterm', models.FloatField(default=25)),
                ('gc_final', models.FloatField(default=40)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='acadify.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gc_type', models.CharField(choices=[('attendance', 'Attendance'), ('assignment', 'Assignment'), ('quiz', 'Quiz'), ('midterm', 'Midterm'), ('final', 'Final')], max_length=20)),
                ('total_marks', models.FloatField()),
                ('obtained_marks', models.FloatField()),
                ('obtained_percentage', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='acadify.enrollment')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('model_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_id', models.PositiveIntegerField()),
                ('type', models.CharField(default='general', max_length=255)),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to=acadify.api.utils.UploadUtils.post)),
                ('title', models.CharField(max_length=255)),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField()),
                ('is_announcement', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('model_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_id', models.PositiveIntegerField()),
                ('attachment', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('model_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['model_type'], name='acadify_att_model_t_51b0f3_idx'), models.Index(fields=['model_type', 'model_id'], name='acadify_att_model_t_a91972_idx'), models.Index(fields=['model_type', 'model_id', 'user'], name='acadify_att_model_t_8231e7_idx')],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_id', models.PositiveIntegerField()),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('model_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['model_type'], name='acadify_com_model_t_4407da_idx'), models.Index(fields=['model_type', 'model_id'], name='acadify_com_model_t_2408f9_idx'), models.Index(fields=['model_type', 'model_id', 'user'], name='acadify_com_model_t_2af2b3_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['user'], name='acadify_cou_user_id_88b6b3_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['course'], name='acadify_enr_course__9e4804_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['user'], name='acadify_enr_user_id_43ef63_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['course', 'user'], name='acadify_enr_course__bcd7fd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('course', 'user')},
        ),
        migrations.AddIndex(
            model_name='grade',
            index=models.Index(fields=['enrollment'], name='acadify_gra_enrollm_ef7abf_idx'),
        ),
        migrations.AddIndex(
            model_name='grade',
            index=models.Index(fields=['enrollment', 'gc_type'], name='acadify_gra_enrollm_d50ffc_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['model_type'], name='acadify_lik_model_t_cb0efd_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['model_type', 'model_id'], name='acadify_lik_model_t_c0c79e_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['model_type', 'model_id', 'user'], name='acadify_lik_model_t_533103_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['model_type'], name='acadify_pos_model_t_bbb3dc_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['model_type', 'model_id'], name='acadify_pos_model_t_10c4f7_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['model_type', 'model_id', 'type'], name='acadify_pos_model_t_1174a1_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['model_type', 'model_id', 'user'], name='acadify_pos_model_t_ff3083_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['model_type', 'model_id', 'type', 'user'], name='acadify_pos_model_t_407044_idx'),
        ),
    ]
